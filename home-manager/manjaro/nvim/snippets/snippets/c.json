{
    "Fast Input": {
        "prefix": "_fast",
        "body": [
            "#define BUFFSIZE (1<<6)\n#define ten 10.0\nchar BUFF[BUFFSIZE+1],*ppp=BUFF;\nint _len,CHAR,SIGN,BYTES=0;\ndouble _power;\n#define _getchar(c){\\\n    if(ppp-BUFF==BYTES&&(BYTES==0||BYTES==BUFFSIZE))\\\n        {BYTES=fread(BUFF,1,BUFFSIZE,stdin);ppp=BUFF;}\\\n    if(ppp-BUFF==BYTES&&(BYTES>0&&BYTES<BUFFSIZE)){BUFF[0]=0;ppp=BUFF;}\\\n    c=*ppp++;\\\n}\\\n#define _letter(c)((((c)>=65)&&((c)<=90))||(((c)>=97)&&((c)<=122)))\\\n#define _ascii(c)((((c)>=32)&&((c)<=126)))\\\n#define _eof(c)((c)==EOF)\\\n#define _pto(c)(((c)==44)||((c)==46))\\\n#define _digit(c)(((c)>=48)&&((c)<=57)))\\\n#define _minus(c)((c)==45)\\\n#define _getint(n){\\\n    n=0;SIGN=1;do{_getchar(CHAR);}while(!(_digit(CHAR)||_minus(CHAR)));\\\n    if(_minus(CHAR)){SIGN=-1;_getchar(CHAR);}\\\n    while(_digit(CHAR)){n=(n<<3)+(n<<1)+(CHAR-48);_getchar(CHAR);}\\\n    if(SIGN==-1){n=-n;}\\\n}\\\n#define _getfloat(n){\\\n    n=0.0;_power=1.0;SIGN=1;\\\n    do{_getchar(CHAR);}while(!(_digit(CHAR)||_minus(CHAR)));\\\n    if(_minus(CHAR)){SIGN=-1;_getchar(CHAR);}\\\n    while(_digit(CHAR)){n=ten*n+(CHAR-48);_getchar(CHAR);}\\\n    if(_pto(CHAR)){_getchar(CHAR);}\\\n    while(_digit(CHAR)){n=(ten*n+(CHAR-48));_getchar(CHAR);_power*=ten;}\\\n    if(SIGN==-1){n=-n;}n/=_power;\\\n}\\\n#define _getline(s){\\\n    _len=0;do{_getchar(CHAR);}while(!_ascii(CHAR));\\\n    do{s[_len++]=CHAR;_getchar(CHAR);}while(!_eof(CHAR)&&_ascii(CHAR));\\\n    s[_len]=0;\\\n}\\\n#define _getword(s){\\\n    _len=0;do{_getchar(CHAR);}while(!_letter(CHAR));\\\n    do{s[_len++]=CHAR;_getchar(CHAR);}while(!_eof(CHAR)&&_letter(CHAR));\\\n    s[_len]=0;\\\n}\\\n"
        ],
        "description": "Fast read of the input"
    },
    "File Redirection": {
        "prefix": "_file_redirection",
        "body": [
            "#ifdef my_env\\\n    freopen(\"/home/daniel/input\",\"r\",stdin);\\\n    //freopen(\"/tmp/out\",\"w\",stdout);\\\n#endif"
        ],
        "description": "File redirection for environment setup"
    }
}
